package wanghaisheng.com.xiaoya.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import wanghaisheng.com.xiaoya.db.DBStory;
import wanghaisheng.com.xiaoya.db.StoryCollection;
import wanghaisheng.com.xiaoya.db.DBArticle;
import wanghaisheng.com.xiaoya.db.ArticleCollection;
import wanghaisheng.com.xiaoya.db.Movie;
import wanghaisheng.com.xiaoya.db.MovieCollection;
import wanghaisheng.com.xiaoya.db.Content;
import wanghaisheng.com.xiaoya.db.Group;

import wanghaisheng.com.xiaoya.db.DBStoryDao;
import wanghaisheng.com.xiaoya.db.StoryCollectionDao;
import wanghaisheng.com.xiaoya.db.DBArticleDao;
import wanghaisheng.com.xiaoya.db.ArticleCollectionDao;
import wanghaisheng.com.xiaoya.db.MovieDao;
import wanghaisheng.com.xiaoya.db.MovieCollectionDao;
import wanghaisheng.com.xiaoya.db.ContentDao;
import wanghaisheng.com.xiaoya.db.GroupDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBStoryDaoConfig;
    private final DaoConfig storyCollectionDaoConfig;
    private final DaoConfig dBArticleDaoConfig;
    private final DaoConfig articleCollectionDaoConfig;
    private final DaoConfig movieDaoConfig;
    private final DaoConfig movieCollectionDaoConfig;
    private final DaoConfig contentDaoConfig;
    private final DaoConfig groupDaoConfig;

    private final DBStoryDao dBStoryDao;
    private final StoryCollectionDao storyCollectionDao;
    private final DBArticleDao dBArticleDao;
    private final ArticleCollectionDao articleCollectionDao;
    private final MovieDao movieDao;
    private final MovieCollectionDao movieCollectionDao;
    private final ContentDao contentDao;
    private final GroupDao groupDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBStoryDaoConfig = daoConfigMap.get(DBStoryDao.class).clone();
        dBStoryDaoConfig.initIdentityScope(type);

        storyCollectionDaoConfig = daoConfigMap.get(StoryCollectionDao.class).clone();
        storyCollectionDaoConfig.initIdentityScope(type);

        dBArticleDaoConfig = daoConfigMap.get(DBArticleDao.class).clone();
        dBArticleDaoConfig.initIdentityScope(type);

        articleCollectionDaoConfig = daoConfigMap.get(ArticleCollectionDao.class).clone();
        articleCollectionDaoConfig.initIdentityScope(type);

        movieDaoConfig = daoConfigMap.get(MovieDao.class).clone();
        movieDaoConfig.initIdentityScope(type);

        movieCollectionDaoConfig = daoConfigMap.get(MovieCollectionDao.class).clone();
        movieCollectionDaoConfig.initIdentityScope(type);

        contentDaoConfig = daoConfigMap.get(ContentDao.class).clone();
        contentDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        dBStoryDao = new DBStoryDao(dBStoryDaoConfig, this);
        storyCollectionDao = new StoryCollectionDao(storyCollectionDaoConfig, this);
        dBArticleDao = new DBArticleDao(dBArticleDaoConfig, this);
        articleCollectionDao = new ArticleCollectionDao(articleCollectionDaoConfig, this);
        movieDao = new MovieDao(movieDaoConfig, this);
        movieCollectionDao = new MovieCollectionDao(movieCollectionDaoConfig, this);
        contentDao = new ContentDao(contentDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);

        registerDao(DBStory.class, dBStoryDao);
        registerDao(StoryCollection.class, storyCollectionDao);
        registerDao(DBArticle.class, dBArticleDao);
        registerDao(ArticleCollection.class, articleCollectionDao);
        registerDao(Movie.class, movieDao);
        registerDao(MovieCollection.class, movieCollectionDao);
        registerDao(Content.class, contentDao);
        registerDao(Group.class, groupDao);
    }
    
    public void clear() {
        dBStoryDaoConfig.getIdentityScope().clear();
        storyCollectionDaoConfig.getIdentityScope().clear();
        dBArticleDaoConfig.getIdentityScope().clear();
        articleCollectionDaoConfig.getIdentityScope().clear();
        movieDaoConfig.getIdentityScope().clear();
        movieCollectionDaoConfig.getIdentityScope().clear();
        contentDaoConfig.getIdentityScope().clear();
        groupDaoConfig.getIdentityScope().clear();
    }

    public DBStoryDao getDBStoryDao() {
        return dBStoryDao;
    }

    public StoryCollectionDao getStoryCollectionDao() {
        return storyCollectionDao;
    }

    public DBArticleDao getDBArticleDao() {
        return dBArticleDao;
    }

    public ArticleCollectionDao getArticleCollectionDao() {
        return articleCollectionDao;
    }

    public MovieDao getMovieDao() {
        return movieDao;
    }

    public MovieCollectionDao getMovieCollectionDao() {
        return movieCollectionDao;
    }

    public ContentDao getContentDao() {
        return contentDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

}
